#Merge Sort test
#2/23/15
#Hannah Bown


def MergeSort(alist):

    if(len(alist)<=1):
        return alist

    if( len(alist)>1):
        mid = len(alist)/2
        leftHalf = alist[:mid]
        rightHalf = alist[mid:]

        leftHalf = MergeSort(leftHalf)
        rightHalf = MergeSort(rightHalf)
        alist = Merge(leftHalf,rightHalf)
        return alist

# Merge two lists together #
def Merge(left, right):
    alist = [0]*(len(left)+len(right))
    i=0
    j=0
    k=0

    while(i<len(left) and j<len(right)):
        if(left[i] < right[j]):
            alist[k] = left[i]
            i+=1
        else:
            alist[k] = right[j]
            j+=1
        k+=1

    while(i<len(left)):
        alist[k] = left[i]
        i+=1
        k+=1
    while(j<len(right)):
        alist[k] = right[j]
        j+=1
        k+=1

    return alist

def main():

    alist = [6,2,7,9,4,6,843,2,0]
    print alist
    sortedList = MergeSort(alist)
    print sortedList

main()

